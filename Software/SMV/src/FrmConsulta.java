
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author aide
 */
public class FrmConsulta extends javax.swing.JDialog {
//aumentar el combustible si se ha recorrido y si se dimunuye restar al total pero registrar tambien en el combustible gastado

    /**
     * Creates new form FrmConsulta
     */
    public FrmConsulta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        lblid.setVisible(false);
        lblc.setVisible(false);
        lblCom.setVisible(false);
        LblKm.setVisible(false);
        lblkmi.setVisible(false);
        estado.setVisible(true);
    }
    //   int ID=0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JtVehiculos = new javax.swing.JTable();
        CBMarca = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        CBModelo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        CMBAnyo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        BtnBuscar = new javax.swing.JButton();
        BtnModificar = new javax.swing.JButton();
        BtnKilometraje = new javax.swing.JButton();
        BtnRegresar = new javax.swing.JButton();
        BtnCombustible = new javax.swing.JButton();
        lblid = new javax.swing.JLabel();
        lblc = new javax.swing.JLabel();
        BtnEliminar = new javax.swing.JButton();
        BtnRMantenimiento = new javax.swing.JButton();
        BtnRendimiento = new javax.swing.JButton();
        LblKm = new javax.swing.JLabel();
        lblCom = new javax.swing.JLabel();
        lblkmi = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        BtnReporte = new javax.swing.JButton();
        cmbTipos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        estado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        JtVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MARCA", "MODELO", "AÑO", "KILOMETRAJE INICIAL", "KILOMETRAJE RECORIDO", "COMBUSTIBLE ", "DESC EXTRA"
            }
        ));
        JtVehiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtVehiculosMouseClicked(evt);
            }
        });
        JtVehiculos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JtVehiculosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(JtVehiculos);

        CBMarca.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        CBMarca.setForeground(new java.awt.Color(102, 0, 0));
        CBMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Marca" }));
        CBMarca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBMarcaItemStateChanged(evt);
            }
        });
        CBMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBMarcaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel3.setText("MARCA");

        CBModelo.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        CBModelo.setForeground(new java.awt.Color(102, 0, 0));
        CBModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Modelo" }));

        jLabel4.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel4.setText("MODELO");

        CMBAnyo.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        CMBAnyo.setForeground(new java.awt.Color(102, 0, 0));
        CMBAnyo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Año" }));

        jLabel5.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel5.setText("AÑO");

        BtnBuscar.setBackground(new java.awt.Color(255, 255, 255));
        BtnBuscar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnBuscar.setForeground(new java.awt.Color(102, 0, 0));
        BtnBuscar.setText("BUSCAR");
        BtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarActionPerformed(evt);
            }
        });
        BtnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBuscarKeyPressed(evt);
            }
        });

        BtnModificar.setBackground(new java.awt.Color(255, 255, 255));
        BtnModificar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnModificar.setForeground(new java.awt.Color(102, 0, 0));
        BtnModificar.setText("MODIFICAR");
        BtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModificarActionPerformed(evt);
            }
        });
        BtnModificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnModificarKeyPressed(evt);
            }
        });

        BtnKilometraje.setBackground(new java.awt.Color(255, 255, 255));
        BtnKilometraje.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnKilometraje.setForeground(new java.awt.Color(102, 0, 0));
        BtnKilometraje.setText(" KILOMETRAJE");
        BtnKilometraje.setIconTextGap(5);
        BtnKilometraje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKilometrajeActionPerformed(evt);
            }
        });
        BtnKilometraje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKilometrajeKeyPressed(evt);
            }
        });

        BtnRegresar.setBackground(new java.awt.Color(255, 255, 255));
        BtnRegresar.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        BtnRegresar.setForeground(new java.awt.Color(153, 0, 0));
        BtnRegresar.setText("REGRESAR");
        BtnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegresarActionPerformed(evt);
            }
        });
        BtnRegresar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRegresarKeyPressed(evt);
            }
        });

        BtnCombustible.setBackground(new java.awt.Color(255, 255, 255));
        BtnCombustible.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnCombustible.setForeground(new java.awt.Color(102, 0, 0));
        BtnCombustible.setText("COMBUSTIBLE");
        BtnCombustible.setIconTextGap(6);
        BtnCombustible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCombustibleActionPerformed(evt);
            }
        });
        BtnCombustible.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCombustibleKeyPressed(evt);
            }
        });

        lblid.setText("id");

        lblc.setText("combustible");

        BtnEliminar.setBackground(new java.awt.Color(255, 255, 255));
        BtnEliminar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnEliminar.setForeground(new java.awt.Color(102, 0, 0));
        BtnEliminar.setText("ELIMINAR");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });
        BtnEliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnEliminarKeyPressed(evt);
            }
        });

        BtnRMantenimiento.setBackground(new java.awt.Color(255, 255, 255));
        BtnRMantenimiento.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnRMantenimiento.setForeground(new java.awt.Color(102, 0, 0));
        BtnRMantenimiento.setText("MANTENIMIENTO");
        BtnRMantenimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRMantenimientoActionPerformed(evt);
            }
        });
        BtnRMantenimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRMantenimientoKeyPressed(evt);
            }
        });

        BtnRendimiento.setBackground(new java.awt.Color(255, 255, 255));
        BtnRendimiento.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnRendimiento.setForeground(new java.awt.Color(102, 0, 0));
        BtnRendimiento.setText("RENDIMIENTO");
        BtnRendimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRendimientoActionPerformed(evt);
            }
        });
        BtnRendimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRendimientoKeyPressed(evt);
            }
        });

        LblKm.setText("recorrido");

        lblCom.setText("combustible");

        lblkmi.setText("inicial");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BARRA 4.png"))); // NOI18N

        BtnReporte.setBackground(new java.awt.Color(255, 255, 255));
        BtnReporte.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        BtnReporte.setForeground(new java.awt.Color(102, 0, 0));
        BtnReporte.setText("CREAR REPORTE");
        BtnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnReporteActionPerformed(evt);
            }
        });
        BtnReporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnReporteKeyPressed(evt);
            }
        });

        cmbTipos.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        cmbTipos.setForeground(new java.awt.Color(102, 0, 0));
        cmbTipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activos", "Inactivos", "Todos" }));
        cmbTipos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTiposItemStateChanged(evt);
            }
        });
        cmbTipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbTiposMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("CLASIFICACIÓN DE VEHÍCULOS ");

        estado.setText("estado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(cmbTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnReporte)
                .addGap(78, 78, 78)
                .addComponent(BtnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 1363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(89, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(115, 115, 115)
                                        .addComponent(BtnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel3)
                                        .addGap(81, 81, 81)
                                        .addComponent(jLabel4)
                                        .addGap(64, 64, 64)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LblKm)
                                .addGap(20, 20, 20)
                                .addComponent(lblCom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblkmi)
                                .addGap(23, 23, 23))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(CBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CMBAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(BtnKilometraje)
                                .addGap(18, 18, 18)
                                .addComponent(BtnCombustible)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnRendimiento)
                                .addGap(18, 18, 18)
                                .addComponent(BtnRMantenimiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblid)
                                .addGap(18, 18, 18)
                                .addComponent(lblc)
                                .addGap(26, 26, 26)
                                .addComponent(estado)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                                .addComponent(BtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addComponent(BtnModificar)
                        .addGap(108, 108, 108))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnRMantenimiento)
                            .addComponent(BtnRendimiento)
                            .addComponent(BtnCombustible)
                            .addComponent(BtnKilometraje))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LblKm)
                            .addComponent(lblCom)
                            .addComponent(lblkmi)
                            .addComponent(lblid)
                            .addComponent(lblc)
                            .addComponent(estado)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BtnEliminar)
                                    .addComponent(BtnModificar)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CMBAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnBuscar)))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BtnRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addComponent(BtnReporte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cmbTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnKilometrajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKilometrajeActionPerformed

        String id = lblid.getText();
        String kmi = lblkmi.getText();
        int dato = Integer.valueOf(id);
        new FrmKilometraje(this, true, dato, kmi).setVisible(true);
        lblid.setText("");


    }//GEN-LAST:event_BtnKilometrajeActionPerformed

    private void BtnRegresarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRegresarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.setVisible(false);

        }
    }//GEN-LAST:event_BtnRegresarKeyPressed

    private void BtnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegresarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_BtnRegresarActionPerformed

    private void BtnKilometrajeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKilometrajeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //  new FrmKilometraje(this, true).setVisible(true);
        }
    }//GEN-LAST:event_BtnKilometrajeKeyPressed

    private void BtnCombustibleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCombustibleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String id = lblid.getText();
            int dato = Integer.valueOf(id);
            String c = lblc.getText();
            float co = Float.valueOf(c);
            new FrmCombustible(this, true, dato, co).setVisible(true);
            lblid.setText("");

        }
    }//GEN-LAST:event_BtnCombustibleKeyPressed

    private void BtnCombustibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCombustibleActionPerformed
        String id = lblid.getText();
        int dato = Integer.valueOf(id);
        String c = lblc.getText();
        float co = Float.valueOf(c);
        new FrmCombustible(this, true, dato, co).setVisible(true);

        lblid.setText("");

// TODO add your handling code here:
    }//GEN-LAST:event_BtnCombustibleActionPerformed
    public void llenarCmb_Marca_Inactivos() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarAnios_Inactivos();
            CBMarca.removeAllItems();
            CBMarca.addItem("Marca");
            while (resultado.next()) {
                CBMarca.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Modelo_Inactivos() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarModelos_Inactivos();
            CBModelo.removeAllItems();
            CBModelo.addItem("Modelo");
            while (resultado.next()) {
                CBModelo.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Anio_Inactivos() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarAnios_Inactivos();
            CMBAnyo.removeAllItems();
            CMBAnyo.addItem("Año");
            while (resultado.next()) {
                CMBAnyo.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Marca_Activos() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarMarcas_Activos();
            CBMarca.removeAllItems();
            CBMarca.addItem("Marca");
            while (resultado.next()) {
                CBMarca.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Modelo_Activos() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarModelos_Activos();
            CBModelo.removeAllItems();
            CBModelo.addItem("Modelo");
            while (resultado.next()) {
                CBModelo.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Anio_Activos() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarAnios_Activos();
            CMBAnyo.removeAllItems();
            CMBAnyo.addItem("Año");
            while (resultado.next()) {
                CMBAnyo.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Marca() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarMarcas();
            CBMarca.removeAllItems();
            CBMarca.addItem("Marca");
            while (resultado.next()) {
                CBMarca.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Modelo() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarModelos();
            CBModelo.removeAllItems();
            CBModelo.addItem("Modelo");
            while (resultado.next()) {
                CBModelo.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCmb_Anio() {
        try {
            BD mBD = new BD();
            mBD.Conectar();
            ResultSet resultado = mBD.ConsultarAnios();
            CMBAnyo.removeAllItems();
            CMBAnyo.addItem("Año");
            while (resultado.next()) {
                CMBAnyo.addItem(resultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LLenarTabla(List<vehiculo> ListaVehiculos) {
        if (ListaVehiculos != null) {
            Object[] encabezado = {"ID", "Marca", "Modelo", "Año", "Km Inicial",
                "Km Recorrido", "Combustible cargado", "Combustible gastado", "Desc Extra", "Estado"};
            DefaultTableModel modelo = new DefaultTableModel(null, encabezado);
            for (vehiculo mvehiculo : ListaVehiculos) {
                Object[] fila = {mvehiculo.getIdentificador(), mvehiculo.getMarca(), mvehiculo.getModelo(), mvehiculo.getAnio(),
                    mvehiculo.getKm_inicial(), mvehiculo.getKm_recorr(), mvehiculo.getComb_actual(), mvehiculo.getComb_gastado(),
                    mvehiculo.getDesc_Extra(), mvehiculo.getEstado()};
                modelo.addRow(fila);
            }
            
            JtVehiculos.setModel(modelo);
            JtVehiculos.getSelectionModel().setSelectionInterval(0, 0);
        }
    }

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
    
        String categoria = (String) cmbTipos.getSelectedItem();
        if (categoria == "Inactivos") {
            try {
                BD mBD = new BD();
                mBD.Conectar();
                List<vehiculo> ListaVehiculos = mBD.ConsultaInactivos();
                LLenarTabla(ListaVehiculos);
                llenarCmb_Marca_Inactivos();
                llenarCmb_Modelo_Inactivos();
                llenarCmb_Anio_Inactivos();
                BtnKilometraje.setEnabled(false);
                BtnCombustible.setEnabled(false);
                BtnEliminar.setEnabled(false);
                BtnModificar.setEnabled(false);
                BtnRMantenimiento.setEnabled(false);
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        } else if (categoria == "Activos") {
            try {
                BD mBD = new BD();
                mBD.Conectar();
                List<vehiculo> ListaVehiculos = mBD.ConsultaActivos();
                LLenarTabla(ListaVehiculos);
                llenarCmb_Marca_Activos();
                llenarCmb_Modelo_Activos();
                llenarCmb_Anio_Activos();
                BtnKilometraje.setEnabled(true);
                BtnCombustible.setEnabled(true);
                BtnEliminar.setEnabled(true);
                BtnModificar.setEnabled(true);
                BtnRMantenimiento.setEnabled(true);
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        } else {
            try {
                BD mBD = new BD();
                mBD.Conectar();
                List<vehiculo> ListaVehiculos = mBD.ConsultaGeneral();
                LLenarTabla(ListaVehiculos);
                llenarCmb_Marca();
                llenarCmb_Modelo();
                llenarCmb_Anio();
//                BtnKilometraje.setEnabled(false);
//                BtnCombustible.setEnabled(false);
//                BtnEliminar.setEnabled(false);
//                BtnModificar.setEnabled(false);
//                BtnRMantenimiento.setEnabled(false);
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        }
    }//GEN-LAST:event_formWindowGainedFocus


    private void CBMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBMarcaActionPerformed

    private void CBMarcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBMarcaItemStateChanged

    }//GEN-LAST:event_CBMarcaItemStateChanged

    private void BtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarActionPerformed
        try {
            BD mBD = new BD();
            mBD.Conectar();

            vehiculo mvehiculo = new vehiculo();
            List<vehiculo> ListaVehiculos = null;
            //Buscar por Marca
            if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() == "Modelo"
                    & CMBAnyo.getSelectedItem().toString() == "Año") {

                mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                ListaVehiculos = mBD.ConsultaPorMarca(mvehiculo);

                //Buscar por Modelo
            } else if (CBMarca.getSelectedItem().toString() == "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                    & CMBAnyo.getSelectedItem().toString() == "Año") {

                mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                ListaVehiculos = mBD.ConsultaPorModelo(mvehiculo);
                //Buscar por Año    
            } else if (CBMarca.getSelectedItem().toString() == "Marca" & CBModelo.getSelectedItem().toString() == "Modelo"
                    & CMBAnyo.getSelectedItem().toString() != "Año") {

                mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                ListaVehiculos = mBD.ConsultaPorAnio(mvehiculo);

                //Buscar por Marca, Modelo Y Año.    
            } else if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                    & CMBAnyo.getSelectedItem().toString() != "Año") {

                mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                ListaVehiculos = mBD.ConsultaMixta(mvehiculo);

                //Buscar Por Marca y Modelo
            } else if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                    & CMBAnyo.getSelectedItem().toString() == "Año") {

                mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                ListaVehiculos = mBD.ConsultaMarcaModelo(mvehiculo);

                //Buscar Marca y Año
            } else if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() == "Modelo"
                    & CMBAnyo.getSelectedItem().toString() != "Año") {

                mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                ListaVehiculos = mBD.ConsultaMarcaAnio(mvehiculo);

                //Buscar Modelo y Año
            } else if (CBMarca.getSelectedItem().toString() == "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                    & CMBAnyo.getSelectedItem().toString() != "Año") {

                mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                ListaVehiculos = mBD.ConsultaModeloAnio(mvehiculo);

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se encontro el vehículo");
            }

            if (ListaVehiculos == null || ListaVehiculos.size() > 0) {
                LLenarTabla(ListaVehiculos);
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se encontro el vehículo");
            }

        } catch (Exception ex) {
            Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnBuscarActionPerformed

    private void JtVehiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtVehiculosMouseClicked
        try {
            //identificar el ID del  productor a modificar
            int fila = JtVehiculos.getSelectedRow();
            if (fila >= 0) {
                int ID = (int) JtVehiculos.getValueAt(fila, 0);

                lblid.setText(String.valueOf(ID));
                float Co = (float) JtVehiculos.getValueAt(fila, 6);
                lblc.setText(String.valueOf(Co));
                float km = (float) JtVehiculos.getValueAt(fila, 5);
                LblKm.setText(String.valueOf(km));
                float Combu = (float) JtVehiculos.getValueAt(fila, 7);
                lblCom.setText(String.valueOf(Combu));
                float kmi = (float) JtVehiculos.getValueAt(fila, 4);
                lblkmi.setText(String.valueOf(kmi));
                String estado1 = (String) JtVehiculos.getValueAt(fila, 9);
                estado.setText(String.valueOf(estado1));
                if(estado1.equals( "activo")){
                BtnKilometraje.setEnabled(true);
                BtnCombustible.setEnabled(true);
                BtnEliminar.setEnabled(true);
                BtnModificar.setEnabled(true);
                BtnRMantenimiento.setEnabled(true);
                }else if(estado1.equals("inactivo")){
                     BtnKilometraje.setEnabled(false);
                BtnCombustible.setEnabled(false);
                BtnEliminar.setEnabled(false);
                BtnModificar.setEnabled(false);
                BtnRMantenimiento.setEnabled(false);
                }

            }

        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_JtVehiculosMouseClicked

    private void JtVehiculosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JtVehiculosKeyReleased
        try {
            //identificar el ID del  productor a modificar
            int fila = JtVehiculos.getSelectedRow();
            if (fila >= 0) {
                int ID = (int) JtVehiculos.getValueAt(fila, 0);

                lblid.setText(String.valueOf(ID));
                float Co = (float) JtVehiculos.getValueAt(fila, 6);
                lblc.setText(String.valueOf(Co));
                // JOptionPane.showMessageDialog(this, "ID SELECCIONADO"+ID);
                float km = (float) JtVehiculos.getValueAt(fila, 5);
                LblKm.setText(String.valueOf(km));
                float Combu = (float) JtVehiculos.getValueAt(fila, 7);
                lblCom.setText(String.valueOf(Combu));
                float kmi = (float) JtVehiculos.getValueAt(fila, 4);
                lblkmi.setText(String.valueOf(kmi));
                String estado1 = (String) JtVehiculos.getValueAt(fila, 9);
                estado.setText(String.valueOf(estado1));
                if(estado1.equals("activo")){
                BtnKilometraje.setEnabled(true);
                BtnCombustible.setEnabled(true);
                BtnEliminar.setEnabled(true);
                BtnModificar.setEnabled(true);
                BtnRMantenimiento.setEnabled(true);
                }else if(estado1.equals("inactivo")){
                     BtnKilometraje.setEnabled(false);
                BtnCombustible.setEnabled(false);
                BtnEliminar.setEnabled(false);
                BtnModificar.setEnabled(false);
                BtnRMantenimiento.setEnabled(false);
                }

            }

        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_JtVehiculosKeyReleased

    private void BtnModificarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnModificarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnModificarKeyPressed

    private void BtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModificarActionPerformed
        try {
            int fila = JtVehiculos.getSelectedRow();
            if (fila >= 0) {
                int ID = (int) JtVehiculos.getValueAt(fila, 0);
                String Marc = JtVehiculos.getValueAt(fila, 1).toString();
                String Mod = JtVehiculos.getValueAt(fila, 2).toString();
                String A = JtVehiculos.getValueAt(fila, 3).toString();
                String Desc = JtVehiculos.getValueAt(fila, 8).toString();
                new FrmModificar(this, true, ID, Marc, Mod, A, Desc).setVisible(true);
            }
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_BtnModificarActionPerformed

    private void BtnBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                BD mBD = new BD();
                mBD.Conectar();

                vehiculo mvehiculo = new vehiculo();
                List<vehiculo> ListaVehiculos = null;
                //Buscar por Marca
                if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() == "Modelo"
                        & CMBAnyo.getSelectedItem().toString() == "Año") {

                    mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                    ListaVehiculos = mBD.ConsultaPorMarca(mvehiculo);

                    //Buscar por Modelo
                } else if (CBMarca.getSelectedItem().toString() == "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                        & CMBAnyo.getSelectedItem().toString() == "Año") {

                    mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                    ListaVehiculos = mBD.ConsultaPorModelo(mvehiculo);
                    //Buscar por Año    
                } else if (CBMarca.getSelectedItem().toString() == "Marca" & CBModelo.getSelectedItem().toString() == "Modelo"
                        & CMBAnyo.getSelectedItem().toString() != "Año") {

                    mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                    ListaVehiculos = mBD.ConsultaPorAnio(mvehiculo);

                    //Buscar por Marca, Modelo Y Año.    
                } else if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                        & CMBAnyo.getSelectedItem().toString() != "Año") {

                    mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                    mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                    mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                    ListaVehiculos = mBD.ConsultaMixta(mvehiculo);

                    //Buscar Por Marca y Modelo
                } else if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                        & CMBAnyo.getSelectedItem().toString() == "Año") {

                    mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                    mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                    ListaVehiculos = mBD.ConsultaMarcaModelo(mvehiculo);

                    //Buscar Marca y Año
                } else if (CBMarca.getSelectedItem().toString() != "Marca" & CBModelo.getSelectedItem().toString() == "Modelo"
                        & CMBAnyo.getSelectedItem().toString() != "Año") {

                    mvehiculo.setMarca(CBMarca.getSelectedItem().toString());
                    mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                    ListaVehiculos = mBD.ConsultaMarcaAnio(mvehiculo);

                    //Buscar Modelo y Año
                } else if (CBMarca.getSelectedItem().toString() == "Marca" & CBModelo.getSelectedItem().toString() != "Modelo"
                        & CMBAnyo.getSelectedItem().toString() != "Año") {

                    mvehiculo.setModelo(CBModelo.getSelectedItem().toString());
                    mvehiculo.setAnio(Integer.parseInt(CMBAnyo.getSelectedItem().toString()));
                    ListaVehiculos = mBD.ConsultaModeloAnio(mvehiculo);

                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se encontro el vehículo");
                }

                if (ListaVehiculos == null || ListaVehiculos.size() > 0) {
                    LLenarTabla(ListaVehiculos);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se encontro el vehículo");
                }

            } catch (Exception ex) {
                Logger.getLogger(FrmConsulta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BtnBuscarKeyPressed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        // TODO add your handling code here:
        String id = lblid.getText();
        int dato = Integer.valueOf(id);
        String kmr = LblKm.getText();
        float kmre = Float.valueOf(kmr);
        String com = lblCom.getText();
        float comb = Float.valueOf(com);

        if (dato != 0) {

            if ((kmre > 0) || (comb > 0)) {
                int n = JOptionPane.showConfirmDialog(rootPane, "Esta seguro de la eliminación\n",
                        "Aviso", JOptionPane.YES_NO_OPTION);
                if (n == 0) {
                    try {
                        vehiculo mVehiculo = new vehiculo();
                        mVehiculo.setIdentificador(dato);
                        BD mBD = new BD();
                        if (mBD.Conectar()) {
                            mBD.EliminarVehiculo(mVehiculo);
                            JOptionPane.showMessageDialog(rootPane, "Vehículo Eliminado con Exito");

                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Error");
                        }
                    } catch (Exception ex) {
                        System.out.println(ex.toString());
                        JOptionPane.showMessageDialog(rootPane, "Error ");
                    }
                }
                }else{
                JOptionPane.showMessageDialog(rootPane, "Vehículo no se puede eliminar");
            }
            }


    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void BtnEliminarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnEliminarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnEliminarKeyPressed

    private void BtnRMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRMantenimientoActionPerformed
        String id = lblid.getText();
        int dato = Integer.valueOf(id);
        String kmre = LblKm.getText();
        float kmr = Float.valueOf(kmre);
        String kmi = lblkmi.getText();
        float kmin = Float.valueOf(kmi);
        new FrmRegistroMantenimiento(this, true, dato, kmr, kmin).setVisible(true);
        lblid.setText("");
    }//GEN-LAST:event_BtnRMantenimientoActionPerformed

    private void BtnRMantenimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRMantenimientoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRMantenimientoKeyPressed

    private void BtnRendimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRendimientoActionPerformed
        Float km = Float.valueOf(LblKm.getText());
        Float com = Float.valueOf(lblCom.getText());
        if ((km > 0) & (com > 0)) {
            Float Rendimiento = km / com;
            Rendimiento mRendimiento = new Rendimiento();
            mRendimiento.setId_vehiculo(Integer.valueOf(lblid.getText()));
            mRendimiento.setRendimiento(Float.valueOf(Rendimiento));
            try {
                BD mBD = new BD();
                if (mBD.Conectar()) {
                    mBD.regRendimiento(mRendimiento);
                    JOptionPane.showMessageDialog(rootPane, "Rendimiento de vehículo:" + Rendimiento + " Kilometros por Litro");
                    LblKm.setText("");
                    lblCom.setText("");
                    lblid.setText("");
                }

            } catch (Exception ex) {
                System.out.println(ex.toString());
                JOptionPane.showMessageDialog(rootPane, "ERROR");
                LblKm.setText("");
                lblCom.setText("");
                lblid.setText("");

            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Rendimiento no se puede calcular");
            LblKm.setText("");
            lblCom.setText("");
            lblid.setText("");
        }
    }//GEN-LAST:event_BtnRendimientoActionPerformed

    private void BtnRendimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRendimientoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRendimientoKeyPressed

    private void BtnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnReporteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnReporteActionPerformed

    private void BtnReporteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnReporteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnReporteKeyPressed

    private void cmbTiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTiposMouseClicked

    }//GEN-LAST:event_cmbTiposMouseClicked

    private void cmbTiposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTiposItemStateChanged
        String categoria = (String) cmbTipos.getSelectedItem();
        if (categoria == "Inactivos") {
            try {
                BD mBD = new BD();
                mBD.Conectar();
                List<vehiculo> ListaVehiculos = mBD.ConsultaInactivos();
                LLenarTabla(ListaVehiculos);
                llenarCmb_Marca_Inactivos();
                llenarCmb_Modelo_Inactivos();
                llenarCmb_Anio_Inactivos();
                BtnKilometraje.setEnabled(false);
                BtnCombustible.setEnabled(false);
                BtnEliminar.setEnabled(false);
                BtnModificar.setEnabled(false);
                BtnRMantenimiento.setEnabled(false);
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        } else if (categoria == "Activos") {
            try {
                BD mBD = new BD();
                mBD.Conectar();
                List<vehiculo> ListaVehiculos = mBD.ConsultaActivos();
                LLenarTabla(ListaVehiculos);
                llenarCmb_Marca_Activos();
                llenarCmb_Modelo_Activos();
                llenarCmb_Anio_Activos();
                BtnKilometraje.setEnabled(true);
                BtnCombustible.setEnabled(true);
                BtnEliminar.setEnabled(true);
                BtnModificar.setEnabled(true);
                BtnRMantenimiento.setEnabled(true);
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        } else {
            try {
                BD mBD = new BD();
                mBD.Conectar();
                List<vehiculo> ListaVehiculos = mBD.ConsultaGeneral();
                LLenarTabla(ListaVehiculos);
                llenarCmb_Marca();
                llenarCmb_Modelo();
                llenarCmb_Anio();
//                BtnKilometraje.setEnabled(true);
//                BtnCombustible.setEnabled(true);
//                BtnEliminar.setEnabled(true);
//                BtnModificar.setEnabled(true);
//                BtnRMantenimiento.setEnabled(true);
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        }

    }//GEN-LAST:event_cmbTiposItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmConsulta dialog = new FrmConsulta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscar;
    private javax.swing.JButton BtnCombustible;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnKilometraje;
    private javax.swing.JButton BtnModificar;
    private javax.swing.JButton BtnRMantenimiento;
    private javax.swing.JButton BtnRegresar;
    private javax.swing.JButton BtnRendimiento;
    private javax.swing.JButton BtnReporte;
    private javax.swing.JComboBox<String> CBMarca;
    private javax.swing.JComboBox<String> CBModelo;
    private javax.swing.JComboBox<String> CMBAnyo;
    private javax.swing.JTable JtVehiculos;
    private javax.swing.JLabel LblKm;
    private javax.swing.JComboBox<String> cmbTipos;
    private javax.swing.JLabel estado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCom;
    private javax.swing.JLabel lblc;
    private javax.swing.JLabel lblid;
    private javax.swing.JLabel lblkmi;
    // End of variables declaration//GEN-END:variables
}
